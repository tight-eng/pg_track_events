'use client';

import React from 'react';
import {
  ReactFlow,
  Background,
  useNodesState,
  useEdgesState,
  Handle,
  Position
} from '@xyflow/react';
import '@xyflow/react/dist/style.css';
import { DatabaseIcon, LayersIcon } from 'lucide-react';
import Link from 'next/link';

// Custom SVG Icon Components
const S3Icon = () => (
  <svg viewBox="0 0 584.1 179.8" width="55" height="17">
    <path style={{ fill: "#fff"/*"#252f3e"*/ }} d="M84.7 65.3c-.1 3 .3 6 1.1 8.9.9 2.5 2 4.9 3.2 7.2.4.7.7 1.5.7 2.3-.1 1.2-.8 2.4-1.9 3l-6.3 4.2c-.8.5-1.7.9-2.6.9-1.1-.1-2.2-.6-3-1.4-1.3-1.4-2.6-3-3.6-4.7-1-1.7-2-3.6-3.1-5.9-7.8 9.2-17.6 13.8-29.4 13.8-8.4 0-15.1-2.4-20-7.2s-7.4-11.2-7.4-19.2c0-8.5 3-15.4 9.1-20.6s14.2-7.8 24.5-7.8c3.5 0 7.1.3 10.6.8 3.7.5 7.5 1.3 11.5 2.2v-7.3c0-7.6-1.6-12.9-4.7-16s-8.6-4.6-16.3-4.6c-3.6 0-7.3.4-10.8 1.3-3.7.9-7.3 2-10.8 3.4-1.1.5-2.3.9-3.5 1.3-.5.2-1.1.3-1.6.3-1.4 0-2.1-1-2.1-3.1v-4.9c-.1-1.2.2-2.4.7-3.5.8-.9 1.7-1.6 2.8-2.1 4-2 8.2-3.5 12.6-4.5C39.5.8 44.8.2 50 .2c11.9 0 20.6 2.7 26.2 8.1s8.3 13.6 8.3 24.6v32.4h.2zM44.1 80.5c3.5 0 7-.6 10.3-1.8 3.7-1.3 6.9-3.5 9.5-6.4 1.6-1.8 2.8-4 3.4-6.4.7-2.8 1-5.8 1-8.7V53c-3-.7-6.1-1.3-9.2-1.7-3.1-.4-6.3-.6-9.4-.6-6.7 0-11.6 1.3-14.9 4s-4.9 6.5-4.9 11.5c0 4.7 1.2 8.2 3.7 10.6s5.9 3.7 10.5 3.7zm80.3 10.8c-1.3.1-2.7-.2-3.8-1-1-1.1-1.8-2.4-2.1-3.9L95 9.1c-.5-1.3-.8-2.6-.9-4-.1-1.2.7-2.3 1.9-2.5h10.4c1.9 0 3.2.3 3.9 1s1.4 2 2 3.9L129 73.7l15.6-66.2c.5-2 1.1-3.3 1.9-3.9 1.2-.7 2.6-1.1 4-1h8c1.9 0 3.2.3 4 1 1 1.1 1.7 2.4 1.9 3.9l15.8 67 17.3-67c.3-1.5 1-2.8 2-3.9 1.2-.7 2.5-1.1 3.9-1h9.3c1.2-.2 2.3.7 2.5 1.9v.6c0 .5-.1 1.1-.2 1.6-.2.9-.4 1.7-.7 2.5l-24.1 77.3c-.6 2-1.3 3.3-2.1 3.9-1.1.7-2.5 1.1-3.8 1h-8.6c-1.9 0-3.2-.3-4-1-1-1.1-1.7-2.5-1.9-4l-15.5-64.5-15.4 64.4c-.2 1.5-.9 2.9-1.9 4-1.2.8-2.6 1.1-4 1h-8.6zM252.9 94c-5.2 0-10.4-.6-15.4-1.8-5-1.2-8.9-2.5-11.5-4-1.3-.6-2.4-1.6-3.1-2.8-.4-.9-.6-1.8-.6-2.8v-5.1c0-2.1.8-3.1 2.3-3.1.6 0 1.2.1 1.8.3.6.2 1.5.6 2.5 1 3.5 1.6 7.2 2.7 11 3.5 3.9.8 7.9 1.2 11.9 1.2 6.3 0 11.2-1.1 14.6-3.3 3.3-2 5.3-5.6 5.2-9.5.1-2.6-.9-5.1-2.7-7-1.8-1.9-5.2-3.6-10.1-5.2l-14.5-4.5c-7.3-2.3-12.7-5.7-16-10.2-3.2-4.2-5-9.2-5-14.5-.1-3.9.8-7.7 2.7-11.1 1.8-3.2 4.2-6 7.2-8.2 3.1-2.4 6.6-4.1 10.4-5.2 4.1-1.2 8.3-1.8 12.6-1.7 2.2 0 4.5.1 6.7.4 2.3.3 4.4.7 6.5 1.1s3.9 1 5.7 1.6c1.5.5 2.9 1.1 4.2 1.8 1.2.6 2.2 1.4 3 2.5.7 1 1 2.1.9 3.3v4.7c0 2.1-.8 3.2-2.3 3.2-1.3-.2-2.6-.6-3.8-1.2-6-2.7-12.6-4-19.2-3.9-5.7 0-10.2.9-13.3 2.8s-4.7 4.8-4.7 8.9c-.1 2.7 1 5.3 3 7.1 2 1.9 5.7 3.8 11 5.5l14.2 4.5c7.2 2.3 12.4 5.5 15.5 9.6 3.1 4 4.7 9 4.6 14 .1 4-.8 8-2.6 11.6-1.8 3.4-4.3 6.4-7.3 8.8-3.3 2.6-7.1 4.5-11.1 5.6-4.6 1.4-9.4 2.1-14.3 2.1z" />
    <path style={{ fill: "#f90"/*"#f90"*/ }} d="M271.8 142.6c-32.9 24.3-80.7 37.2-121.8 37.2-57.6 0-109.5-21.3-148.7-56.7-3.1-2.8-.3-6.6 3.4-4.4 42.4 24.6 94.7 39.5 148.8 39.5 39-.2 77.6-8.1 113.5-23.2 5.5-2.5 10.2 3.6 4.8 7.6z" />
    <path style={{ fill: "#f90"/*"#f90"*/ }} d="M285.5 127c-4.2-5.4-27.8-2.6-38.5-1.3-3.2.4-3.7-2.4-.8-4.5 18.8-13.2 49.7-9.4 53.3-5 3.6 4.4-1 35.4-18.6 50.2-2.7 2.3-5.3 1.1-4.1-1.9 4-9.9 12.9-32.2 8.7-37.5z" />
    <path style={{ fill: "#fff"/*"#252f3e"*/ }} d="M460.6 112.4c1 2 2.5 3.7 4.3 5 1.9 1.3 4 2.3 6.3 2.8 2.4.6 4.9.9 7.4.9 1.9 0 3.7-.2 5.6-.4 1.9-.3 3.8-.8 5.6-1.7 1.7-.8 3.2-2 4.3-3.4 1.2-1.6 1.8-3.5 1.7-5.5.1-2.2-.8-4.3-2.3-5.8-1.7-1.6-3.8-2.8-6-3.7-2.7-1.1-5.5-1.9-8.4-2.6-3.1-.7-6.3-1.6-9.5-2.5-3.3-.8-6.5-1.8-9.7-3-3-1.1-5.9-2.7-8.4-4.7-2.5-1.9-4.5-4.3-6-7.1-1.6-3.2-2.4-6.7-2.3-10.3-.1-4.1.9-8.2 3-11.8 1.9-3.3 4.5-6.2 7.6-8.4 3.2-2.3 6.8-3.9 10.6-5 3.9-1.1 7.9-1.6 11.9-1.6 4.5 0 8.9.5 13.3 1.5 4.1.9 7.9 2.6 11.3 5 3.3 2.3 6 5.3 7.9 8.8 2 4 3 8.5 2.9 13h-18.8c-.1-2.3-.7-4.5-1.7-6.5-.9-1.7-2.2-3.1-3.8-4.1-1.7-1-3.5-1.7-5.4-2.1-2.2-.4-4.4-.6-6.6-.6-1.6 0-3.2.2-4.7.5s-3 .9-4.3 1.7c-1.3.8-2.3 1.9-3.1 3.1-.9 1.4-1.3 3-1.2 4.7-.1 1.5.3 2.9 1 4.2 1 1.4 2.3 2.4 3.9 3 2.6 1.1 5.3 2 8 2.7 3.4.9 7.9 2.1 13.4 3.5 1.6.3 3.9.9 6.9 1.8 3.1.9 6 2.3 8.7 4.1 3 2 5.6 4.5 7.5 7.5 2.1 3.2 3.2 7.2 3.2 12.2 0 3.9-.8 7.7-2.4 11.3-1.6 3.5-4 6.6-7 9-3.4 2.7-7.3 4.7-11.5 5.9-5.2 1.5-10.5 2.2-15.9 2.1-4.8 0-9.5-.6-14.2-1.8-4.4-1.1-8.5-3-12.1-5.7-3.5-2.6-6.4-5.9-8.4-9.8-2.2-4.4-3.2-9.2-3-14.1H459c-.1 2.9.5 5.5 1.6 7.9zM551.8 82.5c2.1-.1 4.1-.6 6-1.4 1.8-.7 3.4-1.9 4.6-3.4 1.3-1.7 1.9-3.8 1.8-5.9 0-3.7-1.2-6.6-3.7-8.5-2.4-2-5.4-3-8.5-3-4.5 0-7.8 1.5-10.1 4.4-2.4 3.2-3.5 7.1-3.3 11.1h-16.7c.1-4.2.9-8.3 2.4-12.2 1.4-3.5 3.4-6.8 6.1-9.5 2.7-2.7 5.8-4.8 9.3-6.1 3.9-1.5 8-2.2 12.1-2.2 3.5 0 7 .5 10.4 1.5 3.4 1 6.5 2.6 9.3 4.6 2.7 2 5 4.6 6.7 7.5 1.8 3.1 2.7 6.7 2.6 10.3.1 3.9-1 7.8-3 11.1-2.1 3.3-5.3 5.6-9.1 6.6v.3c4.4.9 8.4 3.3 11.2 6.9 2.8 3.7 4.2 8.2 4.1 12.7.1 4.2-.8 8.4-2.6 12.1-1.7 3.5-4.1 6.5-7.1 8.9-3.1 2.4-6.5 4.3-10.3 5.4-3.9 1.2-8 1.9-12.1 1.9-4.5.1-9-.7-13.3-2.1-3.8-1.3-7.3-3.4-10.2-6.1-2.9-2.8-5.1-6.1-6.5-9.9-1.6-4.3-2.3-8.8-2.2-13.4h16.7c.1 2.2.4 4.5 1.1 6.6.6 2 1.6 3.8 2.9 5.5 1.3 1.5 2.8 2.8 4.6 3.6 2.1 1 4.3 1.4 6.6 1.4 3.7.1 7.3-1.2 10-3.6 2.7-2.4 4.1-5.8 4.1-10 0-3.3-.6-5.8-1.9-7.5-1.2-1.7-2.9-3-4.9-3.8-2.1-.8-4.3-1.2-6.5-1.3-2.4-.1-4.6-.2-6.7-.2V82.5c2 .2 4.1.2 6.1 0zM375.4 1.9h7v176h-7z" />
  </svg>
);

const MixpanelIcon = () => (
  <svg x="0px" y="0px" viewBox="0 0 371.61 88" width="55" height="55">
    <g>
      <path style={{ fill: '#FFFFFF' }} d="M0,68.26h22.29v-2.37h-1.67c-3.26,0-4.04-0.89-4.04-4.14V32.36c2.27-3.85,5.33-6.32,9.18-6.32
		c4.84,0,7.79,3.55,7.79,10.26v25.45c0,3.26-0.79,4.14-3.95,4.14h-1.78v2.37h21.8V65.9h-1.58c-3.26,0-4.04-0.89-4.04-4.14V35.21
		c0-0.89,0-1.78-0.1-2.66c2.17-3.95,5.43-6.51,9.27-6.51c4.84,0,7.8,3.55,7.8,10.26v25.45c0,3.26-0.79,4.14-3.95,4.14h-1.78v2.37
		h21.8V65.9h-1.48c-3.36,0-4.14-0.89-4.14-4.14V35.21c0-9.96-5.62-15.49-13.81-15.49c-6.11,0-11.44,3.36-14.3,10.06
		c-1.67-6.51-6.61-10.06-13.12-10.06c-5.82,0-10.85,3.15-13.62,9.47v-8.29H0v2.37h1.97c3.36,0,4.14,0.89,4.14,4.14v34.33
		c0,3.26-0.79,4.14-4.14,4.14H0V68.26z M90.17,13.02c3.55,0,6.51-2.96,6.51-6.51c0-3.55-2.96-6.51-6.51-6.51
		c-3.55,0-6.51,2.96-6.51,6.51C83.66,10.06,86.62,13.02,90.17,13.02z M79.12,68.26h21.9v-2.37h-1.48c-3.26,0-4.04-0.89-4.04-4.14
		V20.91H78.92v2.37h1.97c3.36,0,4.14,0.89,4.14,4.14v34.33c0,3.26-0.79,4.14-4.14,4.14h-1.78L79.12,68.26L79.12,68.26z M117,40.45
		h6.31c-1.58-0.99-2.17-2.37-2.96-4.93l-2.37-8.78c-1.08-3.95-1.97-5.82-6.31-5.82h-9.07v2.37h1.29c2.66,0,2.96,0.99,3.75,3.95
		l2.07,7.7C110.79,38.68,112.48,40.45,117,40.45L117,40.45z M131.61,40.45h6.31c4.54,0,6.11-1.78,7.2-5.52l2.07-7.7
		c0.79-2.96,1.18-3.95,3.75-3.95h1.29v-2.37h-8.98c-4.44,0-5.33,1.78-6.32,5.82l-2.37,8.78C133.78,38.17,133.18,39.46,131.61,40.45z
		 M123.32,48.73h8.29v-8.29h-8.29V48.73z M102.6,68.27h9.07c4.34,0,5.23-1.88,6.31-5.82l2.37-8.78c0.79-2.56,1.38-3.95,2.96-4.93
		H117c-4.54,0-6.22,1.78-7.3,5.52l-2.07,7.7c-0.79,2.96-1.08,3.95-3.75,3.95h-1.29L102.6,68.27L102.6,68.27z M143.24,68.27h8.98
		V65.9h-1.29c-2.56,0-2.96-0.99-3.75-3.95l-2.07-7.7c-1.08-3.75-2.66-5.52-7.2-5.52h-6.3c1.58,0.99,2.15,2.27,2.94,4.93l2.37,8.78
		C137.91,66.49,138.8,68.27,143.24,68.27L143.24,68.27z M153.5,88h22.88v-2.37h-2.37c-3.15,0-3.95-0.89-3.95-4.14V62.65
		c2.86,4.24,7.7,6.81,13.42,6.81c10.75,0,19.33-9.47,19.33-25.84c0-14.8-8.09-23.87-18.55-23.87c-6.11,0-11.25,3.55-14.21,9.86
		v-8.68h-16.58v2.37h1.97c3.26,0,4.14,0.89,4.14,4.14v54.05c0,3.26-0.89,4.14-4.14,4.14h-1.97v2.37L153.5,88z M180.54,25.85
		c6.41,0,11.64,6.02,11.64,17.95c0,13.02-4.84,20.13-11.44,20.13c-4.25,0-7.99-2.27-10.66-6.22V33.24
		C172.64,28.41,176.3,25.84,180.54,25.85L180.54,25.85z M218.42,69.26c6.41,0,11.54-3.06,15.39-9.96v1.08
		c0,5.92,3.75,8.48,9.96,8.48c1.88,0,4.25-0.19,5.82-0.69v-2.47c-0.79,0.19-1.38,0.3-1.97,0.3c-2.47,0-3.26-1.48-3.26-3.85V36.9
		c0-11.64-6.51-17.17-17.46-17.17c-7.3,0-14.4,3.36-18.94,6.91l1.58,2.77c4.74-3.26,9.37-5.13,14.4-5.13
		c6.51,0,9.86,3.55,9.86,11.84v2.17l-12.14,4.74c-11.05,4.54-15.1,8.78-15.1,15.19C206.57,64.62,211.11,69.26,218.42,69.26
		L218.42,69.26z M216.94,55.64c0-4.93,2.86-8.48,8.68-11.05l8.19-3.55v15.39c-3.06,4.24-6.61,6.71-10.46,6.71
		C219.51,63.14,216.95,60.48,216.94,55.64L216.94,55.64z M251.56,68.27h22.5V65.9h-1.88c-3.26,0-4.04-0.89-4.04-4.14v-29.3
		c2.27-3.95,5.62-6.41,9.57-6.41c5.13,0,8.39,3.55,8.39,10.26v25.45c0,3.26-0.79,4.14-3.95,4.14h-1.88v2.37h22.39V65.9h-1.97
		c-3.36,0-4.14-0.89-4.14-4.14V35.21c0-9.96-5.92-15.49-14.3-15.49c-6.11,0-11.25,3.15-14.11,9.47v-8.29h-16.58v2.37h1.97
		c3.36,0,4.14,0.89,4.14,4.14v34.33c0,3.26-0.79,4.14-4.14,4.14h-1.97L251.56,68.27L251.56,68.27z M328.31,69.45
		c6.51,0,12.63-2.96,17.07-6.51l-1.48-2.17c-3.95,2.86-8.39,4.14-12.53,4.14c-10.06,0-15.98-7.1-15.98-20.91v-1.78h31.17
		c-0.19-13.32-8.39-22.39-20.32-22.39c-11.93,0-21.51,10.75-21.51,24.96C304.74,60.39,313.62,69.46,328.31,69.45L328.31,69.45z
		 M326.34,22.29c5.92,0,9.57,6.41,10.16,17.26h-20.91C316.48,28.61,320.62,22.29,326.34,22.29L326.34,22.29z M348.73,68.26h22.88
		v-2.37h-2.27c-3.26,0-4.04-0.89-4.04-4.14V1.18h-16.58v2.37h1.97c3.26,0,4.14,0.89,4.14,4.14v54.06c0,3.26-0.89,4.14-4.14,4.14
		h-1.97L348.73,68.26L348.73,68.26z">
      </path>
    </g>
  </svg>
);

const PosthogIcon = () => (
  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 800 140" width="55px" height="55px">
    <g fillRule="nonzero" fill="none">
      <path d="M55.383 75.225c-1.874 3.748-7.222 3.748-9.096 0l-4.482-8.963a5.085 5.085 0 0 1 0-4.548l4.482-8.964c1.874-3.748 7.222-3.748 9.096 0l4.482 8.964a5.084 5.084 0 0 1 0 4.548l-4.482 8.963Zm0 50.836c-1.874 3.747-7.222 3.747-9.096 0l-4.482-8.964a5.085 5.085 0 0 1 0-4.548l4.482-8.964c1.874-3.748 7.222-3.748 9.096 0l4.482 8.964a5.084 5.084 0 0 1 0 4.548l-4.482 8.964Z" fill="#1D4AFF" />
      <path d="M0 106.765c0-4.53 5.477-6.8 8.68-3.596l23.307 23.307c3.204 3.204.935 8.68-3.595 8.68H5.085A5.085 5.085 0 0 1 0 130.073v-23.307Zm0-24.55c0 1.35.536 2.643 1.49 3.596l47.856 47.856a5.086 5.086 0 0 0 3.595 1.49h26.286c4.53 0 6.799-5.477 3.595-8.681L8.681 52.334C5.477 49.131 0 51.4 0 55.93v26.286Zm0-50.834c0 1.348.536 2.642 1.49 3.595l98.69 98.691a5.086 5.086 0 0 0 3.596 1.49h26.285c4.53 0 6.8-5.477 3.596-8.681L8.681 1.5C5.477-1.704 0 .565 0 5.095v26.286Zm50.835 0c0 1.348.536 2.642 1.49 3.595l91.5 91.5c3.203 3.204 8.68.935 8.68-3.596V96.595a5.086 5.086 0 0 0-1.49-3.596l-91.5-91.5c-3.203-3.203-8.68-.934-8.68 3.596v26.286ZM110.35 1.5c-3.203-3.204-8.68-.935-8.68 3.595v26.286c0 1.348.536 2.642 1.49 3.595l40.664 40.665c3.204 3.204 8.68.935 8.68-3.596V45.76a5.086 5.086 0 0 0-1.489-3.596L110.35 1.5Z" fill="#F9BD2B" />
      <path d="m216.24 107.388-47.864-47.863c-3.204-3.204-8.681-.935-8.681 3.595v66.952a5.085 5.085 0 0 0 5.085 5.085h74.142a5.085 5.085 0 0 0 5.085-5.085v-6.097c0-2.809-2.286-5.052-5.07-5.414a39.27 39.27 0 0 1-22.698-11.173Zm-32.145 11.502a8.137 8.137 0 0 1-8.133-8.134 8.137 8.137 0 0 1 8.133-8.134 8.137 8.137 0 0 1 8.134 8.134 8.137 8.137 0 0 1-8.134 8.134Z" fill="#fff" />
      <path d="M0 130.072a5.085 5.085 0 0 0 5.085 5.085h23.307c4.53 0 6.799-5.477 3.595-8.681L8.681 103.169C5.477 99.966 0 102.235 0 106.765v23.307Zm50.835-86.418L8.68 1.5C5.477-1.704 0 .565 0 5.095v26.286c0 1.348.536 2.642 1.49 3.595l49.345 49.346V43.654ZM8.68 52.334C5.477 49.131 0 51.4 0 55.93v26.286c0 1.348.536 2.642 1.49 3.595l49.345 49.346V94.489L8.68 52.334Z" fill="#1D4AFF" />
      <path d="M101.67 45.76a5.083 5.083 0 0 0-1.49-3.596L59.516 1.5c-3.204-3.204-8.681-.935-8.681 3.595v26.286c0 1.348.536 2.642 1.49 3.595l49.345 49.346V45.76Zm-50.835 89.397h28.392c4.53 0 6.799-5.477 3.595-8.681L50.835 94.489v40.668Zm0-91.503v38.562c0 1.348.536 2.642 1.49 3.595l49.345 49.346V96.595a5.084 5.084 0 0 0-1.49-3.596L50.835 43.654Z" fill="#F54E00" />
      <path d="M303.32 114.86h20.888V80.22h17.452c19.17 0 31.466-11.37 31.466-28.954 0-17.584-12.295-28.954-31.466-28.954h-38.34v92.547Zm20.888-52.488V40.16h15.337c7.932 0 12.692 4.23 12.692 11.105 0 6.876-4.76 11.106-12.692 11.106h-15.337Zm86.71 53.545c20.36 0 35.167-14.543 35.167-34.375 0-19.831-14.807-34.374-35.167-34.374-20.625 0-35.168 14.543-35.168 34.374 0 19.832 14.543 34.375 35.168 34.375Zm-15.866-34.375c0-10.577 6.346-17.848 15.866-17.848 9.386 0 15.733 7.271 15.733 17.848 0 10.577-6.347 17.849-15.733 17.849-9.52 0-15.866-7.272-15.866-17.849Zm84.462 34.375c15.601 0 26.178-9.784 26.178-21.286 0-26.97-35.829-18.245-35.829-28.822 0-2.908 3.04-4.759 7.404-4.759 4.495 0 9.916 2.776 11.634 8.858l15.601-6.479c-3.04-9.65-14.279-16.261-27.896-16.261-14.676 0-23.798 8.725-23.798 19.17 0 25.252 35.3 18.245 35.3 28.69 0 3.702-3.437 6.214-8.594 6.214-7.403 0-12.56-5.156-14.146-11.37l-15.601 6.081c3.438 10.048 13.486 19.964 29.747 19.964Zm76.43-1.718-1.321-16.791c-2.248 1.19-5.157 1.586-7.536 1.586-4.76 0-7.933-3.437-7.933-9.387V64.355h16.13v-16.13h-16.13V28.923h-19.435v19.302h-10.577v16.13h10.577v27.764c0 16.13 10.974 23.798 25.384 23.798 3.967 0 7.669-.66 10.842-1.718Zm67.764-91.887v35.961h-36.755v-35.96h-20.89v92.546h20.89V76.122h36.755v38.737h21.021V22.312h-21.021Zm67.386 93.605c20.36 0 35.168-14.543 35.168-34.375 0-19.831-14.807-34.374-35.168-34.374-20.625 0-35.168 14.543-35.168 34.374 0 19.832 14.543 34.375 35.168 34.375ZM675.23 81.542c0-10.577 6.346-17.848 15.865-17.848 9.387 0 15.733 7.271 15.733 17.848 0 10.577-6.346 17.849-15.733 17.849-9.519 0-15.865-7.272-15.865-17.849Zm88.545 31.202c7.272 0 13.75-2.512 17.188-6.875v6.346c0 7.404-5.95 12.56-15.072 12.56-6.479 0-12.164-3.173-13.09-8.594l-17.715 2.777c2.38 12.56 15.204 21.022 30.805 21.022 20.492 0 34.11-12.032 34.11-29.88V48.225h-19.17v5.685c-3.57-4.098-9.652-6.742-17.452-6.742-18.51 0-30.144 12.692-30.144 32.788 0 20.096 11.634 32.788 30.54 32.788ZM752.14 79.956c0-9.916 5.817-16.262 14.807-16.262 9.123 0 14.94 6.346 14.94 16.262s-5.817 16.262-14.94 16.262c-8.99 0-14.807-6.346-14.807-16.262Z" fill="#fff" />
    </g>
  </svg>
);

const BigQueryIcon = () => (
  <svg
    viewBox="0 0 120 60"
    version="1.1"
    id="svg54"
    width="60"
    height="30">
    <g
      id="g942"
      transform="matrix(1.0761991,0,0,1.0761991,-4.315335,-2.2859734)">
      <g
        transform="matrix(0.46366782,0,0,0.46366782,-37.02839,-17.716055)"
        id="g877">
        <path
          style={{ fill: "#4386fa" }}
          d="M 117.79,137.76 99.27,105.68 a 5.54,5.54 0 0 1 0,-5.54 l 18.52,-32.08 a 5.54,5.54 0 0 1 4.79,-2.77 h 37.06 a 5.54,5.54 0 0 1 4.77,2.77 l 18.52,32.08 a 5.54,5.54 0 0 1 0,5.54 l -18.52,32.08 a 5.54,5.54 0 0 1 -4.79,2.77 h -37.05 a 5.54,5.54 0 0 1 -4.78,-2.77 z"
          id="path20" />
        <path
          style={{ opacity: 0.1, isolation: "isolate" }}
          d="m 152.67,92.58 c 0,0 5.15,12.35 -1.87,19.35 -7.02,7 -19.8,2.52 -19.8,2.52 0,0 19,19.25 26,26.07 h 2.64 a 5.54,5.54 0 0 0 4.79,-2.77 l 12.26,-21.23 z"
          id="path22" />
        <path
          style={{ fill: "#ffffff" }}
          d="m 158.75,117.85 -5.69,-5.69 a 0.89,0.89 0 0 0 -0.21,-0.16 15.47,15.47 0 1 0 -2.69,2.71 0.89,0.89 0 0 0 0.15,0.2 l 5.69,5.69 a 0.89,0.89 0 0 0 1.26,0 v 0 l 1.49,-1.49 a 0.89,0.89 0 0 0 0,-1.26 z m -18.13,-3.68 a 11.64,11.64 0 1 1 11.64,-11.64 11.64,11.64 0 0 1 -11.64,11.64 z"
          id="path24" />
        <path
          style={{ fill: "#ffffff" }}
          d="m 133.18,101.91 v 4.81 a 8.56,8.56 0 0 0 3.11,3.16 v -8 z"
          id="path26" />
        <path
          style={{ fill: "#ffffff" }}
          d="m 133.18,101.91 v 4.81 a 8.56,8.56 0 0 0 3.11,3.16 v -8 z"
          id="path28" />
        <path
          style={{ fill: "#ffffff" }}
          d="m 139,97.92 v 13 a 8.58,8.58 0 0 0 3.11,0 v -13 z"
          id="path30" />
        <path
          style={{ fill: "#ffffff" }}
          d="m 139,97.92 v 13 a 8.58,8.58 0 0 0 3.11,0 v -13 z"
          id="path32" />
        <path
          style={{ fill: "#ffffff" }}
          d="m 148,106.71 v -2.85 h -3.11 v 6 a 8.56,8.56 0 0 0 3.11,-3.15 z"
          id="path34" />
        <path
          style={{ fill: "#ffffff" }}
          d="m 148,106.71 v -2.85 h -3.11 v 6 a 8.56,8.56 0 0 0 3.11,-3.15 z"
          id="path36" />
      </g>
      <g
        transform="matrix(0.77444045,0,0,0.77444045,28.093678,7.0542873)"
        id="g913">
        <g
          id="g885">
          <path
            style={{ fill: "#ffffff", strokeWidth: "0.45085225" }}
            d="m 52.396403,17.098366 h -8.408395 v 2.497722 h 5.978301 c -0.297562,3.50763 -3.214577,4.995443 -5.964775,4.995443 a 6.5689173,6.5689173 0 0 1 -6.614003,-6.546375 v 0 -0.112713 a 6.5824429,6.5824429 0 0 1 6.600477,-6.695156 6.4877639,6.4877639 0 0 1 4.508523,1.83046 l 1.749306,-1.803409 A 8.8998235,8.8998235 0 0 0 43.906855,8.7666174 9.1883689,9.1883689 0 1 0 44.037602,27.134337 c 4.909781,-0.009 8.516599,-3.376883 8.516599,-8.3588 A 7.4886559,7.4886559 0 0 0 52.400911,17.1164 v 0 z"
            id="path8" />
          <path
            style={{ fill: "#ffffff", strokeWidth: "0.45085225" }}
            d="m 59.316985,15.294957 a 5.8340281,5.8340281 0 0 0 -5.95125,5.734841 v 0 0.126238 a 5.9310579,5.9310579 0 0 0 11.861923,0.06763 c 0,-3.913397 -3.070304,-5.928707 -5.910673,-5.928707 z m 0.03156,2.326398 c 1.699713,0 3.309256,1.352557 3.309256,3.606818 0,2.254261 -1.605034,3.579767 -3.318273,3.579767 -1.884562,0 -3.372374,-1.510355 -3.372374,-3.606818 0,-2.096463 1.465269,-3.57075 3.376883,-3.57075 z"
            id="path10" />
          <path
            style={{ fill: "#ffffff", strokeWidth: "0.45085225" }}
            d="m 72.211359,15.294957 a 5.8340281,5.8340281 0 0 0 -5.933215,5.734841 v 0 0.126238 a 5.9310579,5.9310579 0 0 0 11.861922,0.06763 c 0,-3.908889 -3.074812,-5.924198 -5.924198,-5.924198 v 0 z m 0.03607,2.326398 c 1.699713,0 3.309256,1.352557 3.309256,3.606818 0,2.254261 -1.605034,3.579767 -3.318273,3.579767 -1.884562,0 -3.372375,-1.510355 -3.372375,-3.606818 0,-2.096463 1.46527,-3.57075 3.376884,-3.57075 z"
            id="path12" />
          <path
            style={{ fill: "#ffffff", strokeWidth: "0.45085225" }}
            d="m 84.87129,15.294957 c -3.155965,0 -5.667212,2.77725 -5.667212,5.901656 a 5.8250111,5.8250111 0 0 0 5.61311,5.910673 3.899872,3.899872 0 0 0 3.237119,-1.442727 v 1.167707 c 0,2.037852 -1.235335,3.264171 -3.101863,3.264171 a 3.2822044,3.2822044 0 0 1 -3.02071,-2.100972 l -2.254262,0.937773 c 0.788992,1.690696 2.407551,3.494105 5.293006,3.494105 3.155966,0 5.568025,-1.988259 5.568025,-6.154134 v -10.61757 h -2.484196 v 0.991875 A 4.1748919,4.1748919 0 0 0 84.87129,15.294957 Z m 0.229935,2.303855 c 1.55544,0 3.155966,1.330014 3.155966,3.606818 0,2.276804 -1.596017,3.557224 -3.192034,3.557224 -1.690696,0 -3.26417,-1.352556 -3.26417,-3.552715 0,-2.254261 1.636593,-3.606818 3.304747,-3.606818 v 0 z"
            id="path14" />
          <path
            style={{ fill: "#ffffff", strokeWidth: "0.45085225" }}
            d="m 101.5393,15.294957 c -2.993661,0 -5.509416,2.3805 -5.509416,5.897148 a 5.712298,5.712298 0 0 0 5.793446,5.915181 5.9873179,5.9873179 0 0 0 4.95938,-2.5924 l -2.04236,-1.352557 a 3.29573,3.29573 0 0 1 -2.88095,1.623068 3.0342357,3.0342357 0 0 1 -2.894468,-1.803409 l 7.916968,-3.282204 -0.41028,-0.960315 a 5.3471077,5.3471077 0 0 0 -4.92331,-3.444512 v 0 z m 0.10369,2.254262 a 2.3579573,2.3579573 0 0 1 2.18664,1.262386 l -5.288499,2.218193 c -0.229935,-1.713239 1.393133,-3.471562 3.101859,-3.471562 v 0 z"
            id="path16" />
          <path
            style={{ fill: "#ffffff", strokeWidth: "0.45085225" }}
            d="m 92.25625,26.755621 h 2.601418 V 9.3572334 H 92.25625 Z"
            id="path18" />
        </g>
        <g
          id="g895"
          transform="translate(0,-2)">
          <path
            style={{ fill: "#ffffff", strokeWidth: "0.45085225" }}
            d="M 35.025063,48.79328 V 37.386718 h 4.129809 a 3.3227811,3.3227811 0 0 1 2.326398,0.901704 2.8538948,2.8538948 0 0 1 0.973841,2.218193 2.407551,2.407551 0 0 1 -1.546424,2.375992 v 0.06312 a 2.7727413,2.7727413 0 0 1 1.402151,0.996383 2.6465027,2.6465027 0 0 1 0.527497,1.61856 3.0071845,3.0071845 0 0 1 -1.009909,2.326398 3.4354942,3.4354942 0 0 1 -2.439111,0.901704 h -4.359744 z m 1.46527,-10.00892 v 3.489596 h 2.660031 a 1.7763579,1.7763579 0 0 0 1.307471,-0.527497 1.6952045,1.6952045 0 0 0 0.05861,-2.394026 l -0.04509,-0.04509 a 1.6861874,1.6861874 0 0 0 -1.257872,-0.527492 h -2.705116 z m 0,4.864695 v 3.742074 h 2.948576 a 1.8800539,1.8800539 0 0 0 1.898088,-1.857511 c 0,0 0,0 0,0 A 1.803409,1.803409 0 0 0 40.77794,44.226146 1.9025965,1.9025965 0 0 0 39.37579,43.66709 h -2.889966 z"
            id="path38" />
          <path
            style={{ fill: "#ffffff", strokeWidth: "0.45085225" }}
            d="m 46.138573,38.288422 a 1.0324517,1.0324517 0 1 1 -0.302071,-0.734889 1.000892,1.000892 0 0 1 0.302071,0.734889 z m -0.302071,2.705114 v 7.808761 h -1.465269 v -7.808761 z"
            id="path40" />
          <path
            style={{ fill: "#ffffff", strokeWidth: "0.45085225" }}
            d="m 51.129508,52.490268 a 4.3642498,4.3642498 0 0 1 -1.226318,-0.166815 3.9720083,3.9720083 0 0 1 -1.045977,-0.450852 3.3768834,3.3768834 0 0 1 -0.811535,-0.73489 3.0207101,3.0207101 0 0 1 -0.509463,-0.901704 l 1.388625,-0.577091 a 2.1956505,2.1956505 0 0 0 0.829568,1.100079 2.3218891,2.3218891 0 0 0 1.352557,0.414785 2.4255851,2.4255851 0 0 0 1.866529,-0.716856 2.7817584,2.7817584 0 0 0 0.671769,-1.974732 v -0.770958 h -0.06312 a 2.8809459,2.8809459 0 0 1 -1.122622,0.97835 3.3633578,3.3633578 0 0 1 -1.537406,0.360681 3.4580368,3.4580368 0 0 1 -2.632977,-1.194758 4.3236731,4.3236731 0 0 1 -1.086554,-2.957591 4.2650623,4.2650623 0 0 1 1.082045,-2.948574 3.4354942,3.4354942 0 0 1 2.632977,-1.212792 3.3588493,3.3588493 0 0 1 1.537406,0.360682 2.8809459,2.8809459 0 0 1 1.122623,0.978349 h 0.06312 v -1.082045 h 1.40215 v 7.47513 a 3.9900424,3.9900424 0 0 1 -1.068519,2.948574 3.8953635,3.8953635 0 0 1 -2.844878,1.073028 z m 0.04959,-4.783542 a 2.2542613,2.2542613 0 0 0 1.76734,-0.779975 3.2371192,3.2371192 0 0 0 0,-4.05767 2.2542613,2.2542613 0 0 0 -1.76734,-0.798008 2.2858209,2.2858209 0 0 0 -1.767341,0.798008 2.9125055,2.9125055 0 0 0 -0.716855,2.033344 2.8809459,2.8809459 0 0 0 0.716855,2.024326 2.2858209,2.2858209 0 0 0 1.767341,0.7935 z"
            id="path42" />
          <path
            style={{ fill: "#ffffff", strokeWidth: "0.45085225" }}
            d="M 70.272694,48.811314 69.118513,49.559728 68.33403,48.39653 a 6.1856929,6.1856929 0 0 1 -2.741182,0.653735 5.6176191,5.6176191 0 0 1 -4.174892,-1.726764 6.1631503,6.1631503 0 0 1 0,-8.480531 5.9061645,5.9061645 0 0 1 8.354292,0 5.7618918,5.7618918 0 0 1 1.690696,4.224486 6.0865054,6.0865054 0 0 1 -0.51848,2.497722 5.9557582,5.9557582 0 0 1 -1.460761,2.037852 z m -4.670829,-1.163199 a 4.3191646,4.3191646 0 0 0 1.920631,-0.450852 l -1.352557,-2.010801 1.154182,-0.779975 1.320997,1.992767 a 4.3913009,4.3913009 0 0 0 1.307471,-3.313764 4.4454032,4.4454032 0 0 0 -1.257877,-3.26417 4.1388237,4.1388237 0 0 0 -3.106372,-1.289438 4.1884174,4.1884174 0 0 0 -3.124407,1.289438 4.909781,4.909781 0 0 0 0,6.52834 4.1884174,4.1884174 0 0 0 3.137932,1.298455 z"
            id="path44" />
          <path
            style={{ fill: "#ffffff", strokeWidth: "0.45085225" }}
            d="m 79.803711,48.79328 h -1.40215 v -1.082046 h -0.06312 a 2.605926,2.605926 0 0 1 -1.027943,0.960316 2.9485737,2.9485737 0 0 1 -1.442727,0.383224 2.8899629,2.8899629 0 0 1 -2.209176,-0.820551 3.2551533,3.2551533 0 0 1 -0.766449,-2.335415 v -4.905272 h 1.46527 v 4.810593 q 0.04959,1.920631 1.92063,1.920631 a 1.8349687,1.8349687 0 0 0 1.460762,-0.712347 2.5698578,2.5698578 0 0 0 0.590616,-1.699713 v -4.319164 h 1.46527 v 7.799744 z"
            id="path46" />
          <path
            style={{ fill: "#ffffff", strokeWidth: "0.45085225" }}
            d="m 85.015563,49.050265 a 3.7375652,3.7375652 0 0 1 -2.835861,-1.181232 4.1658748,4.1658748 0 0 1 -1.113605,-2.980134 4.2425197,4.2425197 0 0 1 1.091063,-2.971116 3.899872,3.899872 0 0 1 5.540974,-0.06312 4.4363862,4.4363862 0 0 1 1.027943,3.155966 v 0.157799 h -6.16315 a 2.5428067,2.5428067 0 0 0 0.766449,1.848494 2.4706703,2.4706703 0 0 0 3.953974,-0.698821 l 1.307471,0.635701 a 3.8953635,3.8953635 0 0 1 -1.456252,1.546424 4.0576703,4.0576703 0 0 1 -2.119006,0.550039 z m -2.344432,-5.099139 h 4.476963 a 1.9476817,1.9476817 0 0 0 -0.662753,-1.352556 2.3173806,2.3173806 0 0 0 -1.600525,-0.532006 2.1280226,2.1280226 0 0 0 -1.424693,0.509463 2.4391107,2.4391107 0 0 0 -0.788992,1.370591 z"
            id="path48" />
          <path
            style={{ fill: "#ffffff", strokeWidth: "0.45085225" }}
            d="m 91.521361,48.79328 h -1.46527 v -7.799744 h 1.402151 v 1.275912 h 0.06312 a 2.1144971,2.1144971 0 0 1 0.901705,-1.059503 2.5428067,2.5428067 0 0 1 1.352556,-0.450852 2.7501987,2.7501987 0 0 1 1.082046,0.193866 l -0.450852,1.420185 a 2.4346022,2.4346022 0 0 0 -0.861128,-0.112713 1.898088,1.898088 0 0 0 -1.442727,0.671769 2.2542613,2.2542613 0 0 0 -0.61316,1.559949 v 4.305639 z"
            id="path50" />
          <path
            style={{ fill: "#ffffff", strokeWidth: "0.45085225" }}
            d="m 102.98202,40.993536 -4.882725,11.271306 h -1.514863 l 1.803409,-3.93594 -3.210068,-7.335366 h 1.596017 l 2.326397,5.61311 h 0.03156 l 2.254263,-5.61311 h 1.58249 z"
            id="path52" />
        </g>
      </g>
    </g>
  </svg>
);

const AmplitudeIcon = () => (
  <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg"
    viewBox="0 0 120 60" width="60" height="30">
    <g>
      <path style={{ fill: "#00A7CF" }} d="M19.2,24.3c-0.1-0.1-0.1-0.1-0.2-0.1c-0.1,0-0.1,0-0.2,0c-0.6,0.4-1.3,2.3-1.9,4.7l0.6,0c1.1,0,2.2,0,3.3,0
      c-0.3-1.1-0.6-2.1-0.8-2.8C19.6,25,19.3,24.5,19.2,24.3z"/>
      <path style={{ fill: "#00A7CF" }} d="M20.4,19.6C14.7,19.6,10,24.2,10,30s4.7,10.4,10.4,10.4S30.8,35.8,30.8,30S26.2,19.6,20.4,19.6z M27.9,30.2
      L27.9,30.2C27.9,30.2,27.9,30.2,27.9,30.2L27.9,30.2L27.9,30.2L27.9,30.2L27.9,30.2c-0.2,0.1-0.3,0.1-0.4,0.1h-4.9
      c0,0.2,0.1,0.3,0.1,0.6c0.3,1.2,1,4.3,1.8,4.3h0h0h0c0.6,0,0.9-0.9,1.6-2.8l0,0c0.1-0.3,0.2-0.6,0.4-1l0-0.1l0,0
      c0-0.1,0.2-0.2,0.3-0.1c0.1,0,0.2,0.2,0.1,0.3l0,0l0,0.1c-0.1,0.2-0.1,0.5-0.2,0.9c-0.4,1.6-1,4.1-2.5,4.1h0c-1,0-1.6-1.6-1.8-2.3
      c-0.5-1.3-0.8-2.6-1.2-3.9h-4.5l-0.9,3l0,0c-0.1,0.2-0.4,0.3-0.7,0.1c-0.1-0.1-0.2-0.2-0.2-0.4v0l0.1-0.3c0.1-0.8,0.3-1.6,0.5-2.4
      h-1.9l0,0c-0.4-0.1-0.6-0.4-0.6-0.7c0-0.3,0.2-0.6,0.6-0.7c0.1,0,0.1,0,0.2,0h0.1c0.6,0,1.3,0,2,0c1-4.1,2.2-6.1,3.4-6.1
      c1.4,0,2.4,3.1,3.2,6.2l0,0c1.7,0,3.5,0.1,5.2,0.2l0.1,0c0,0,0.1,0,0.1,0h0h0h0c0.3,0.1,0.5,0.4,0.4,0.7C28.1,30,28,30.1,27.9,30.2
      z"/>
      <path style={{ fill: "#fff" }} d="M36.6,32.6l-0.8,2h-2.4L38,24h2.1l4.5,10.7h-2.4l-0.8-2H36.6z M39,26.7l-1.6,3.9h3.1L39,26.7z" />
      <path style={{ fill: "#fff" }} d="M58.2,30.6v4.1H56v-3.9c0-1.2-0.6-1.8-1.6-1.8c-0.5,0-1,0.2-1.4,0.8c0,0.3,0.1,0.5,0.1,0.8v4.1h-2.2v-3.9
      c0-1.2-0.6-1.8-1.6-1.8c-0.4,0-0.9,0.3-1.3,0.8v4.9h-2.2v-7.5H48v0.5c0.5-0.4,1-0.7,1.8-0.7c1,0,1.8,0.4,2.4,1.1
      c0.8-0.7,1.5-1.1,2.7-1.1C56.7,27,58.2,28.4,58.2,30.6z"/>
      <path style={{ fill: "#fff" }} d="M67.7,30.9c0,2.2-1.7,3.9-3.7,3.9c-0.8,0-1.5-0.2-2.1-0.6v4h-2.2V27.2h2.2v0.4c0.6-0.4,1.3-0.6,2.1-0.6
      C66,27,67.7,28.7,67.7,30.9z M65.5,30.9c0-1.1-0.8-2.1-1.9-2.1c-0.6,0-1.3,0.2-1.8,0.9v2.4c0.5,0.6,1.1,0.9,1.8,0.9
      C64.7,33,65.5,32,65.5,30.9L65.5,30.9z"/>
      <path style={{ fill: "#fff" }} d="M71.1,34.6h-2.2V23.6h2.2V34.6L71.1,34.6z" />
      <path style={{ fill: "#fff" }} d="M73,24.6c0-0.7,0.6-1.3,1.3-1.3c0.7,0,1.3,0.5,1.3,1.3c0,0.7-0.6,1.2-1.3,1.2C73.6,25.8,73,25.3,73,24.6z
      M75.4,27.2v7.5h-2.2v-7.5H75.4z"/>
      <path style={{ fill: "#fff" }} d="M83.3,34.5c-0.9,0.3-1.3,0.3-2,0.3c-1.8,0-3-1.3-3-3.2V29h-1.6v-1.8h1.6v-2.7h2.2v2.7h2.7V29h-2.7v2.6
      c0,0.8,0.5,1.2,1.3,1.2c0.4,0,0.8-0.1,1.3-0.2L83.3,34.5z"/>
      <path style={{ fill: "#fff" }} d="M92,34.6h-2.2v-0.5c-0.6,0.5-1.3,0.8-2.1,0.8c-2,0-3.3-1.4-3.3-3.6v-4.1h2.2v3.9c0,1.2,0.6,1.8,1.6,1.8
      c0.5,0,1.1-0.3,1.6-0.9v-4.8H92L92,34.6L92,34.6z"/>
      <path style={{ fill: "#fff" }} d="M101.2,34.6H99v-0.4c-0.6,0.4-1.3,0.6-2.1,0.6c-2.1,0-3.7-1.7-3.7-3.9c0-2.2,1.7-3.9,3.7-3.9
      c0.8,0,1.5,0.2,2.1,0.6v-4h2.2V34.6L101.2,34.6z M99,32.1v-2.4c-0.5-0.6-1.1-0.9-1.8-0.9c-1.1,0-1.9,1-1.9,2c0,1.1,0.8,2.1,1.9,2.1
      C97.9,33,98.5,32.8,99,32.1L99,32.1z"/>
      <path style={{ fill: "#fff" }} d="M110,31.5h-5.5c0.2,0.9,0.7,1.6,1.9,1.6c0.6,0,1-0.2,1.3-0.6h2.3c-0.4,1.4-1.8,2.4-3.6,2.4c-2.4,0-4-1.7-4-4
      c0-2.3,1.6-4,4-4c2.1,0,3.7,1.5,3.7,3.8C110,31,110,31.2,110,31.5z M104.5,30.2h3.4c-0.1-0.9-0.7-1.4-1.6-1.4
      C105.2,28.7,104.7,29.4,104.5,30.2L104.5,30.2z"/>
    </g>
  </svg>
);

const dbCode = `INSERT INTO users
{
  "name": "Tim Cook",
  "email": "tim@example.com"
}`
const transformationCode = `track:
  user.insert:
    event: "user_signup"
    properties:
      id: "new.id"
      email: "new.email"
      name: "new.name"`

// Custom node components
const DatabaseNode = ({ data }: { data: { label: string, code: string } }) => {
  return (
    <div className="rounded-lg border border-gray-600 bg-black p-4 w-72 shadow-lg shadow-emerald-900/20">
      <div className="flex items-center mb-2">
        <div className="bg-gray-800 rounded p-1 mr-2">
          <DatabaseIcon className="w-4 h-4 text-emerald-400" />
        </div>
        <div className="text-emerald-400 font-medium">PostgreSQL</div>
      </div>
      <div className="border border-gray-700 rounded-md p-3 bg-gray-900">
        <div className="text-white font-mono text-sm text-left">
          <pre>
            {data.code}
          </pre>
        </div>
      </div>
      <Handle type="source" position={Position.Right} id="a" className="w-3 h-3 bg-emerald-500" />
    </div>
  );
};

const TransformationNode = ({ data }: { data: { label: string, code: string } }) => {
  return (
    <div className="rounded-lg border border-gray-600 bg-black p-4 w-96 shadow-lg shadow-emerald-900/20">
      <div className="flex items-center mb-2">
        <div className="bg-gray-800 rounded p-1 mr-2">
          <LayersIcon className="w-4 h-4 text-emerald-400" />
        </div>
        <div className="text-emerald-400 font-medium">pg_track_events</div>
      </div>
      <div className="border border-gray-700 rounded-md p-3 bg-gray-900">
        <div className="text-white font-mono text-sm text-left">
          <pre>
            {data.code}
          </pre>
        </div>
      </div>
      <Handle type="target" position={Position.Left} id="b" className="w-3 h-3 bg-emerald-500" />
      <Handle type="source" position={Position.Right} id="c" className="w-3 h-3 bg-emerald-500" />
    </div>
  );
};

const DestinationNode = ({ data }: { data: { label: string, icon: React.ReactNode } }) => {
  return (
    <div className="rounded-full border border-gray-600 bg-black p-4 w-16 h-16 flex flex-col items-center justify-center shadow-lg shadow-emerald-900/20">
      <div>
        {data.icon}
      </div>
      <Handle type="target" position={Position.Left} id="d" className="w-3 h-3 bg-emerald-500" />
    </div>
  );
};

const initialNodes = [
  {
    id: 'database',
    type: 'database',
    position: { x: 0, y: 150 },
    data: { label: 'PostgreSQL', code: dbCode },
  },
  {
    id: 'transformation',
    type: 'transformation',
    position: { x: 400, y: 150 },
    data: { label: 'Transformation Logic', code: transformationCode },
  },
  {
    id: 's3',
    type: 'destination',
    position: { x: 850, y: 50 },
    data: {
      label: 'S3',
      icon: <S3Icon />
    },
  },
  {
    id: 'mp',
    type: 'destination',
    position: { x: 850, y: 130 },
    data: {
      label: 'MP',
      icon: <MixpanelIcon />
    },
  },
  {
    id: 'ph',
    type: 'destination',
    position: { x: 850, y: 210 },
    data: {
      label: 'PH',
      icon: <PosthogIcon />
    },
  },
  {
    id: 'bq',
    type: 'destination',
    position: { x: 850, y: 290 },
    data: {
      label: 'BQ',
      icon: <BigQueryIcon />
    },
  },
  {
    id: 'amp',
    type: 'destination',
    position: { x: 850, y: 370 },
    data: {
      label: 'AMP',
      icon: <AmplitudeIcon />
    },
  },
];

const initialEdges = [
  {
    id: 'db-to-transform',
    source: 'database',
    target: 'transformation',
    animated: true,
    style: {
      stroke: '#10b981',
      strokeWidth: 2,
      strokeDasharray: '5,5'
    },
  },
  {
    id: 'transform-to-s3',
    source: 'transformation',
    target: 's3',
    animated: true,
    style: {
      stroke: '#10b981',
      strokeWidth: 2,
      strokeDasharray: '5,5'
    },
  },
  {
    id: 'transform-to-mp',
    source: 'transformation',
    target: 'mp',
    animated: true,
    style: {
      stroke: '#10b981',
      strokeWidth: 2,
      strokeDasharray: '5,5'
    },
  },
  {
    id: 'transform-to-ph',
    source: 'transformation',
    target: 'ph',
    animated: true,
    style: {
      stroke: '#10b981',
      strokeWidth: 2,
      strokeDasharray: '5,5'
    },
  },
  {
    id: 'transform-to-bq',
    source: 'transformation',
    target: 'bq',
    animated: true,
    style: {
      stroke: '#10b981',
      strokeWidth: 2,
      strokeDasharray: '5,5'
    },
  },
  {
    id: 'transform-to-amp',
    source: 'transformation',
    target: 'amp',
    animated: true,
    style: {
      stroke: '#10b981',
      strokeWidth: 2,
      strokeDasharray: '5,5'
    },
  },
];

// Node types
const nodeTypes = {
  database: DatabaseNode,
  transformation: TransformationNode,
  destination: DestinationNode,
};

const PostgresEventTrackingFlow = () => {
  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);
  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);
  const [isMobile, setIsMobile] = React.useState(false);

  React.useEffect(() => {
    const checkMobile = () => {
      setIsMobile(window.innerWidth < 768);
    };

    checkMobile();
    window.addEventListener('resize', checkMobile);

    return () => window.removeEventListener('resize', checkMobile);
  }, []);

  React.useEffect(() => {
    if (isMobile) {
      // Vertical layout for mobile
      const mobileNodes = [
        {
          id: 'database',
          type: 'database',
          position: { x: 50, y: 50 },
          data: { label: 'PostgreSQL', code: dbCode },
        },
        {
          id: 'transformation',
          type: 'transformation',
          position: { x: 50, y: 300 },
          data: { label: 'Transformation Logic', code: transformationCode },
        },
        {
          id: 's3',
          type: 'destination',
          position: { x: 50, y: 650 },
          data: {
            label: 'S3',
            icon: <S3Icon />
          },
        },
        {
          id: 'mp',
          type: 'destination',
          position: { x: 120, y: 650 },
          data: {
            label: 'MP',
            icon: <MixpanelIcon />
          },
        },
        {
          id: 'ph',
          type: 'destination',
          position: { x: 190, y: 650 },
          data: {
            label: 'PH',
            icon: <PosthogIcon />
          },
        },
        {
          id: 'bq',
          type: 'destination',
          position: { x: 260, y: 650 },
          data: {
            label: 'BQ',
            icon: <BigQueryIcon />
          },
        },
        {
          id: 'amp',
          type: 'destination',
          position: { x: 330, y: 650 },
          data: {
            label: 'AMP',
            icon: <AmplitudeIcon />
          },
        },
      ];

      const mobileEdges = [
        {
          id: 'db-to-transform',
          source: 'database',
          target: 'transformation',
          animated: true,
          style: {
            stroke: '#10b981',
            strokeWidth: 2,
            strokeDasharray: '5,5'
          },
        },
        {
          id: 'transform-to-s3',
          source: 'transformation',
          target: 's3',
          animated: true,
          style: {
            stroke: '#10b981',
            strokeWidth: 2,
            strokeDasharray: '5,5'
          },
        },
        {
          id: 'transform-to-mp',
          source: 'transformation',
          target: 'mp',
          animated: true,
          style: {
            stroke: '#10b981',
            strokeWidth: 2,
            strokeDasharray: '5,5'
          },
        },
        {
          id: 'transform-to-ph',
          source: 'transformation',
          target: 'ph',
          animated: true,
          style: {
            stroke: '#10b981',
            strokeWidth: 2,
            strokeDasharray: '5,5'
          },
        },
        {
          id: 'transform-to-bq',
          source: 'transformation',
          target: 'bq',
          animated: true,
          style: {
            stroke: '#10b981',
            strokeWidth: 2,
            strokeDasharray: '5,5'
          },
        },
        {
          id: 'transform-to-amp',
          source: 'transformation',
          target: 'amp',
          animated: true,
          style: {
            stroke: '#10b981',
            strokeWidth: 2,
            strokeDasharray: '5,5'
          },
        },
      ];

      setNodes(mobileNodes);
      setEdges(mobileEdges);
    } else {
      setNodes(initialNodes);
      setEdges(initialEdges);
    }
  }, [isMobile, setNodes, setEdges]);

  // Also update mobile node types to adjust handle positions
  const nodeTypesWithMobile = React.useMemo(() => {
    if (isMobile) {
      const MobileDatabaseNode = ({ data }: { data: { label: string, code: string } }) => {
        return (
          <div className="rounded-lg border border-gray-600 bg-black p-4 w-72 shadow-lg shadow-emerald-900/20">
            <div className="flex items-center mb-2">
              <div className="bg-gray-800 rounded p-1 mr-2">
                <DatabaseIcon className="w-4 h-4 text-emerald-400" />
              </div>
              <div className="text-emerald-400 font-medium">PostgreSQL</div>
            </div>
            <div className="border border-gray-700 rounded-md p-3 bg-gray-900">
              <div className="text-white font-mono text-sm text-left">
                <pre>
                  {data.code}
                </pre>
              </div>
            </div>
            <Handle type="source" position={Position.Bottom} id="a" className="w-3 h-3 bg-emerald-500" />
          </div>
        );
      };

      const MobileTransformationNode = ({ data }: { data: { label: string, code: string } }) => {
        return (
          <div className="rounded-lg border border-gray-600 bg-black p-4 w-72 shadow-lg shadow-emerald-900/20">
            <div className="flex items-center mb-2">
              <div className="bg-gray-800 rounded p-1 mr-2">
                <LayersIcon className="w-4 h-4 text-emerald-400" />
              </div>
              <div className="text-emerald-400 font-medium">pg_track_events</div>
            </div>
            <div className="border border-gray-700 rounded-md p-3 bg-gray-900">
              <div className="text-white font-mono text-sm text-left">
                <pre>
                  {data.code}
                </pre>
              </div>
            </div>
            <Handle type="target" position={Position.Top} id="b" className="w-3 h-3 bg-emerald-500" />
            <Handle type="source" position={Position.Bottom} id="c" className="w-3 h-3 bg-emerald-500" />
          </div>
        );
      };

      const MobileDestinationNode = ({ data }: { data: { label: string, icon: React.ReactNode } }) => {
        return (
          <div className="rounded-full border border-gray-600 bg-black p-3 w-16 h-16 flex flex-col items-center justify-center shadow-lg shadow-emerald-900/20">
            <div>
              {data.icon}
            </div>
            <Handle type="target" position={Position.Top} id="d" className="w-3 h-3 bg-emerald-500" />
          </div>
        );
      };

      return {
        database: MobileDatabaseNode,
        transformation: MobileTransformationNode,
        destination: MobileDestinationNode,
      };
    }

    return nodeTypes;
  }, [isMobile]);

  return (
    <div className="w-full h-[calc(100vh-100px)]">
      <div className="p-4 md:pt-8 max-w-3xl mx-auto text-center">
        <h1 className="text-4xl md:text-5xl font-bold mb-4 max-w-4xl m-auto">Accurate analytics straight from your database</h1>
        <p className="text-gray-400 text-lg mb-4">Your database knows what happened — why aren't you listening?<br />pg_track_events emits analytics events as your data changes. </p>
        <Link href="/docs">
          <button
            className="inline-flex items-center px-6 py-3 text-sm font-medium text-gray-900 bg-emerald-400 rounded-full hover:bg-emerald-500 transition-colors cursor-pointer"
          >
            Get started
          </button>
        </Link>
      </div>
      <div className="w-full h-4/6 pointer-events-none">
        <ReactFlow
          nodes={nodes}
          edges={edges}
          onNodesChange={onNodesChange}
          onEdgesChange={onEdgesChange}
          nodeTypes={isMobile ? nodeTypesWithMobile : nodeTypes}
          fitView
          attributionPosition="bottom-right"
          nodesDraggable={false}
          nodesConnectable={false}
          elementsSelectable={false}
          panOnScroll={false}
          zoomOnScroll={false}
          zoomOnPinch={false}
          proOptions={{ hideAttribution: true }}
        >
          <Background color="#334155" gap={16} />
        </ReactFlow>
      </div>
    </div>
  );
};

export default PostgresEventTrackingFlow;
